from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from routers import air_quality, auth
from security.rate_limiting import setup_rate_limiting

app = FastAPI(
    title="API Qualit√© de l'Air - S√©curis√©e OWASP",
    description="""
    API de consultation des donn√©es de pollution atmosph√©rique en France et M√©tropole.
    
    ## üîí Authentification
    - **Acc√®s libre** : Donn√©es de base PostgreSQL
    - **Acc√®s priv√©** : Donn√©es MongoDB (JWT requis)
        
    ## üìä Sources de donn√©es
    - **PostgreSQL** : Table `qualite_air` avec indices de qualit√© par station
    - **MongoDB** : Collection d'√©pisodes de pollution g√©olocalis√©s
    
    ## üõ°Ô∏è S√©curit√© OWASP
    - JWT Authentication : Contr√¥le d'acc√®s
    - Rate Limiting : Protection anti-DDoS
    - Input Validation : Protection injection SQL
    
    """,
    version="1.0.0",
)

# Configuration Rate Limiting
setup_rate_limiting(app)

# Configuration CORS basique
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Routes
app.include_router(auth.router, prefix="/auth", tags=["Authentification"])
app.include_router(air_quality.router, prefix="/api", tags=["Qualit√© de l'Air"])


if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8001)
